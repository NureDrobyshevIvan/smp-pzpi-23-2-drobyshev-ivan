Харківський національний університет радіоелектроніки
Факультет комп’ютерних наук
Катедра програмної інженерії 
 
  

Звіт
з лабораторної роботи № 4
з дисципліни «Скриптові мови програмування»






Виконав:
ст. гр. ПЗПІ-23-2
Дробишев І. С. Перевірив
ст. викладач катедри ПІ
Сокорчук І. П.
 
Харків 2025
1 ІСТОРІЯ ЗМІН

№ 	Дата	       Версія звіту   	Опис змін та виправлень
1 	28.05.2025	 0.1	            Створено такі розділи: "Завдання", "Опис виконаної роботи", "Висновки". Були оформлені додатки


2 ЗАВДАННЯ
     
      Розробити веб-застосунок магазину з системою авторизації та профілями користувачів. Застосунок повинен мати модульну структуру з винесеними в окремі файли шапкою (header.php) та підвалом (footer.php) сайту. Реалізувати систему авторизації користувачів з використанням сесій, де зберігається інформація про авторизованого користувача. Для неавторизованих користувачів обмежити доступ до основних сторінок сайту, показуючи сторінку 404 з повідомленням про необхідність авторизації.
     Створити сторінку профілю користувача з можливістю редагування особистих даних (ім'я, прізвище, дата народження, опис) та завантаження фото. Реалізувати валідацію введених даних: перевірку на порожні поля, довжину імені та прізвища (більше 1 символу), вік користувача (не менше 16 років), довжину опису (не менше 50 символів).

3 ОПИС ВИКОНАНОЇ РОБОТИ

     Проєкт було організовано у вигляді набору взаємопов’язаних PHP-скриптів, CSS-стилів та допоміжних файлів, розділених за функціональним призначенням:
     * index.php — головний роутер застосунку, який підключає шапку, підвал та відповідну сторінку залежно від параметра page.
     * home.php — домашня сторінка з привітанням (див. додаток Б.9).
     * products.php — сторінка каталогу товарів з формою для додавання товарів у кошик.
     * basket.php — сторінка кошика з можливістю перегляду, видалення товарів та оплати.
     * login.php — сторінка входу для авторизації користувача.
     * profile.php — сторінка профілю з формою для редагування особистих даних та завантаження фото.
     * 404.php — сторінка з повідомленням про необхідність авторизації або про помилку доступу.
     * includes/header.php(див. додаток Б.6) та includes/footer.php(див. додаток Б.7) — окремі файли для шапки та підвалу сайту, що підключаються на всіх сторінках.
     * includes/functions.php — модуль з бізнес-логікою: робота з товарами, кошиком, авторизацією, профілем користувача, перевіркою доступу.
     * data/productsDB.php — модуль для роботи з базою даних SQLite (товари).
     * data/products.db — база даних SQLite, що містить таблиці товарів та користувачів.
     * style.css — файл зі стилями для оформлення інтерфейсу, форм, таблиць, повідомлень та адаптивного дизайну.
     * uploads/ — директорія для зберігання завантажених користувачами фото профілю.
     index.php — це головний файл-роутер застосунку(див. додаток Б.8), який відповідає за організацію навігації між сторінками сайту. Він підключає спільні компоненти (шапку та підвал) і, залежно від параметра page у запиті, підключає відповідний контент: каталог товарів, кошик, профіль, сторінку входу або сторінку з помилкою доступу.
     База даних SQLite містить таблиці для зберігання інформації про товари та користувачів. При першому запуску система автоматично створює необхідні таблиці та додає тестові дані. За це відповідає модуль data/productsDB.php(див. додаток Б.1), який ініціалізує базу і наповнює її початковими записами. 
     Модуль functions.php (див. додаток Б.2) містить функції для:
     * отримання списку товарів з БД,
     * роботи з кошиком (додавання, видалення, очищення),
     * перевірки авторизації користувача,
     * обробки профілю та завантаження фото,
     * валідації введених даних.
     Сторінка products.php (див. додаток Б.3) реалізує форму для вибору кількості товарів та додавання їх у кошик . Валідація не дозволяє додати більше 100 одиниць одного товару. При натисканні на кнопку «Додати до кошика» дані з форми надсилаються на сервер методом POST і викликається функція addToCart(), яка додає обраний товар у сесію користувача: якщо товар вже є у кошику, його кількість збільшується, інакше створюється новий запис.
     Сторінка basket.php (див. додаток Б.4) відповідає за відображення поточного вмісту кошика користувача. При завантаженні сторінки з сесії отримується список товарів, які були додані до кошика. Всі товари виводяться у вигляді таблиці з інформацією про ID, назву, ціну, кількість та суму по кожній позиції. Для кожного товару є кнопка «Видалити», яка дозволяє прибрати окрему позицію з кошика — при натисканні на неї викликається функція removeFromCart(), що оновлює сесію та перезавантажує сторінку. У нижній частині таблиці підраховується загальна сума до сплати. Користувач може натиснути кнопку «Оплатити», після чого викликається функція clearCart(), яка повністю очищає кошик у сесії. Після успішної оплати на сторінці відображається повідомлення про успішну покупку та пропонується повернутися до каталогу товарів. Якщо кошик порожній, користувач бачить відповідне повідомлення з посиланням на сторінку продуктів.
     Сторінка login.php(див. додаток Б.10) відповідає за авторизацію користувача. На сторінці розміщена форма з полями для введення логіну та пароля. Після відправки форми дані надсилаються методом POST і проходять перевірку. Далі скрипт підключає базу даних і виконує пошук користувача за введеним логіном. Якщо користувача знайдено і пароль співпадає (перевіряється через password_verify()), у сесії зберігається ідентифікатор користувача, логін та час входу. Після успішної авторизації користувач автоматично перенаправляється на сторінку з товарами. У разі невірного логіну або пароля виводиться відповідне повідомлення про помилку. Якщо користувач неавторизований і намагається отримати доступ до захищених сторінок, йому відображається сторінка 404.php(див. додаток Б.11) з повідомленням про необхідність входу.
     Сторінка profile.php(див. додаток Б.12) дозволяє авторизованому користувачу переглядати та редагувати свої особисті дані: ім’я, прізвище, дату народження, опис і фото профілю. При завантаженні сторінки з бази даних отримуються поточні дані користувача, які підставляються у форму. Користувач може змінити будь-яке поле та завантажити нове фото. Після відправки форми дані проходять валідацію: перевіряється, що ім’я та прізвище містять більше одного символу, вік користувача не менше 16 років, а також коректність формату фото. Якщо користувач обирає нове фото, воно зберігається у папці uploads/, а шлях до нього записується у базу даних. У разі успішного оновлення даних користувач бачить відповідне повідомлення. Також реалізовано прев’ю фото перед завантаженням за допомогою JavaScript, що покращує зручність користування сторінкою профілю.
     Інтерфейс оформлено за допомогою CSS для зручності користування, адаптивності та сучасного вигляду(див. додаток Б.5). Реалізовано окрему шапку та підвал з навігацією між сторінками.
     Система використовує сесії PHP для зберігання стану кошика, авторизації та профілю користувача, що забезпечує збереження даних між запитами та захищає доступ до персональної інформації.
     

4 ВИСНОВКИ

     Під час виконання лабораторної роботи №4 було розширено функціонал інтернет-магазину за рахунок впровадження системи авторизації та профілю користувача. Додано сторінку входу, реалізовано захист доступу до кошика та профілю для неавторизованих користувачів. Створено сторінку профілю з можливістю редагування особистих даних і завантаження фото. Покращено структуру коду за рахунок винесення спільних елементів у окремі файли, а також підвищено безпеку та зручність користування сайтом.

ДОДАТОК А
Відеозапис

Відеозапис презентації результатів лабораторної роботи: https://youtu.be/KvBE_j9TSLI

Хронологічний опис відеозапису:
00:00 - Вступ
00:06 - Конфігурація БД 
01:04 - Огляд footer.php, functions.php(Основних функцій застосунку), header.php, 404.php
04:25 - Огляд сторінки basket.php на якій відбувається обробка оплати
05:58 - Огляд головної сторінки index.php, сторінки products.php та home.php
07:36 - Огляд сторінки login.php на якій відбувається логін користувача
08:40 - Огляд сторінки profile.php на якій вібувається відображення данних користувача та надається можливість редагування цих даних
11:00 - Демонстрація роботи програми 

ДОДАТОК Б
Програмний код
Б.1 Файл productsDB.php

GitHub репозиторій: https://github.com/NureDrobyshevIvan/smp-pzpi-23-2-drobyshev-ivan/blob/main/Lab4/smp-pzpi-23-2-drobyshev-ivan-lab4/data/productsDB.php

        1 <?php
        2 $dbFile = __DIR__ . '/products.db';
        3
        4 if (!file_exists($dbFile)) {
        5     $pdo = new PDO('sqlite:' . $dbFile);
        6     $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        7
        8     $pdo->exec("CREATE TABLE products (
        9         id INTEGER PRIMARY KEY AUTOINCREMENT,
       10         name TEXT NOT NULL,
       11         price INTEGER NOT NULL
       12     )");
       13
       14     $pdo->exec("CREATE TABLE users (
       15         id INTEGER PRIMARY KEY AUTOINCREMENT,
       16         first_name TEXT,
       17         last_name TEXT,
       18         birth_date TEXT,
       19         description TEXT,
       20         photo TEXT,
       21         username TEXT NOT NULL UNIQUE,
       22         password TEXT NOT NULL
       23     )");
       24
       25     $products = [
       26         ['name' => 'Молоко пастеризоване', 'price' => 12],
       27         ['name' => 'Сир білий', 'price' => 21],
       28         ['name' => 'Яйця курячі', 'price' => 7],
       29         ['name' => 'Кефір', 'price' => 15],
       30         ['name' => 'Сметана', 'price' => 18],
       31         ['name' => 'Масло вершкове', 'price' => 35],
       32         ['name' => 'Йогурт натуральний', 'price' => 14],
       33         ['name' => 'Сир твердий', 'price' => 45],
       34         ['name' => 'Ряжанка', 'price' => 13],
       35         ['name' => 'Вершки', 'price' => 22]
       36     ];
       37
       38     $stmt = $pdo->prepare("INSERT INTO products (name, price) VALUES (?, ?)");
       39     foreach ($products as $p) {
       40         $stmt->execute([$p['name'], $p['price']]);
       41     }
       42
       43     $stmtUser = $pdo->prepare("INSERT INTO users (first_name, last_name, birth_date, description, photo, username, password) VALUES (?, ?, ?, ?, ?, ?, ?)");
       44     $stmtUser->execute([
       45         'test',
       46         'test',
       47         '2000-01-01',
       48         'test',
       49         '',
       50         'test',
       51         password_hash('test1', PASSWORD_DEFAULT)
       52     ]);
       53 } else {
       54     $pdo = new PDO('sqlite:' . $dbFile);
       55     $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
       56 }
      

Б.2 Файл functions.php

GitHub репозиторій: https://github.com/NureDrobyshevIvan/smp-pzpi-23-2-drobyshev-ivan/blob/main/Lab4/smp-pzpi-23-2-drobyshev-ivan-lab4/includes/functions.php

        1 <?php
        2 
        3 function getProducts() {
        4     require_once __DIR__ . '/../data/productsDB.php';
        5     $products = [];
        6     $stmt = $pdo->query("SELECT id, name, price FROM products");
        7     while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
        8         $products[$row['id']] = $row;
        9     }
       10     return $products;
       11 }
       12
       13 function getCart() {
       14     return $_SESSION['cart'] ?? [];
       15 }
       16
       17 function addToCart($id, $count) {
       18     if (!isset($_SESSION['cart'])) {
       19         $_SESSION['cart'] = [];
       20     }
       21     $found = false;
       22     foreach ($_SESSION['cart'] as &$item) {
       23         if ($item['id'] == $id) {
       24             $item['count'] += $count;
       25             $found = true;
       26             break;
       27         }
       28     }
       29     if (!$found) {
       30         $_SESSION['cart'][] = ['id' => $id, 'count' => $count];
       31     }
       32 }
       33
       34 function removeFromCart($id) {
       35     if (!isset($_SESSION['cart'])) return;
       36
       37     $newCart = [];
       38     foreach ($_SESSION['cart'] as $item) {
       39         if ($item['id'] != $id) {
       40             $newCart[] = $item;
       41         }
       42     }
       43     $_SESSION['cart'] = $newCart;
       44 }
       45
       46
       47 function clearCart() {
       48     unset($_SESSION['cart']);
       49 }
       50
       51 function validateCount($count) {
       52     return is_numeric($count) && $count > 0 && $count <= 100;
       53 }
       54
       55 function findProduct($id, $products) {
       56     foreach ($products as $p) {
       57         if ($p['id'] == $id) return $p;
       58     }
       59     return null;
       60 }
       61
       62 function requireAuth() {
       63     if (empty($_SESSION['user_id'])) {
       64         include __DIR__ . '/../404.php';
       65         exit;
       66     }
       67 }
       68
       69 function logoutUser() {
       70     session_unset();
       71     session_destroy();
       72 }


Б.3 Файл products.php

GitHub репозиторій: https://github.com/NureDrobyshevIvan/smp-pzpi-23-2-drobyshev-ivan/blob/main/Lab4/smp-pzpi-23-2-drobyshev-ivan-lab4/products.php

        1 <?php
        2 requireAuth();
        3 $products = getProducts();
        4
        5 $error = '';
        6 if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        7     foreach ($products as $product) {
        8         $count = $_POST['count_' . $product['id']] ?? 0;
        9         if ($count > 0) {
       10             if (!validateCount($count)) {
       11                 $error = 'Перевірте будь ласка введені дані. Кількість товару не може бути більшою за 100';
       12                 break;
       13             }
       14             addToCart($product['id'], (int)$count);
       15         }
       16     }
       17     if (!$error) {
       18         header('Location: index.php?page=basket');
       19         exit;
       20     }
       21 }
       22 ?>
       23 <div class="main-content">
       24     <h2>Products</h2>
       25     <form method="POST" action="">
       26         <table>
       27             <?php foreach ($products as $product): ?>
       28             <tr>
       29                 <td><b><?= htmlspecialchars($product['name']) ?></b></td>
       30                 <td><input type="number" name="count_<?= $product['id'] ?>" value="0" min="0" max="100"></td>
       31                 <td>$<?= $product['price'] ?></td>
       32             </tr>
       33             <?php endforeach; ?>
       34         </table>
       35         <div class="button-center">
       36             <button type="submit">Додати в кошик</button>
       37         </div>
       38     </form>
       39     <?php if ($error): ?>
       40         <div style="color:red;"> <?= $error ?> </div>
       41     <?php endif; ?>
       42 </div>

Б.4 Файл basket.php

GitHub репозиторій: https://github.com/NureDrobyshevIvan/smp-pzpi-23-2-drobyshev-ivan/blob/main/Lab4/smp-pzpi-23-2-drobyshev-ivan-lab4/basket.php

        1 <?php
        2 requireAuth();
        3 $products = getProducts();
        4 $cart = getCart();
        5
        6 if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['remove'])) {
        7     removeFromCart((int)$_POST['remove']);
        8     header('Location: index.php?page=basket');
        9     exit;
       10 }
       11
       12 if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['pay'])) {
       13     clearCart();
       14     $paid = true;
       15 }
       16
       17 ?>
       18 <div class="main-content">
       19     <h2>Cart</h2>
       20     <?php if (!empty($paid ?? false)): ?>
       21         <div style="color: green; font-weight: bold;">Оплата успішна! Дякуємо за покупку.</div>
       22         <p><a href="index.php">Повернутися до магазину</a></p>
       23     <?php elseif (empty($cart)): ?>
       24         <p>Кошик порожній. <a href="index.php?page=products">Перейти до покупок</a></p>
       25     <?php else: ?>
       26         <table border="1" cellpadding="5">
       27             <tr>
       28                 <th>ID</th><th>Назва</th><th>Ціна</th><th>Кількість</th><th>Сума</th><th></th>
       29             </tr>
       30             <?php $total = 0; foreach ($cart as $item):
       31                 $product = findProduct($item['id'], $products);
       32                 if (!$product) continue;
       33                 $sum = $product['price'] * $item['count'];
       34                 $total += $sum;
       35             ?>
       36             <tr>
       37                 <td><?= $product['id'] ?></td>
       38                 <td><?= htmlspecialchars($product['name']) ?></td>
       39                 <td>$<?= $product['price'] ?></td>
       40                 <td><?= $item['count'] ?></td>
       41                 <td>$<?= $sum ?></td>
       42                 <td>
       43                     <form method="post" style="display: inline;">
       44                         <input type="hidden" name="remove" value="<?= $product['id'] ?>">
       45                         <button type="submit" class="remove-button">Видалити</button>
       46                     </form>
       47                 </td>
       48             </tr>
       49             <?php endforeach; ?>
       50             <tr>
       51                 <td colspan="4"><b>Разом до сплати:</b></td>
       52                 <td colspan="2"><b>$<?= $total ?></b></td>
       53             </tr>
       54         </table>
       55         <form method="post" action="index.php?page=basket">
       56             <div class="button-center">
       57                 <button name="pay">Оплатити</button>
       58             </div>
       59         </form>
       60     <?php endif; ?>
       61 </div>

Б.5 Файл style.css

GitHub репозиторій: https://github.com/NureDrobyshevIvan/smp-pzpi-23-2-drobyshev-ivan/blob/main/Lab4/smp-pzpi-23-2-drobyshev-ivan-lab4/style.css

        1 body { font-family: Arial, sans-serif; margin: 0; padding: 0; }
        2 header, footer { background: #f0f0f0; padding: 10px; }
        3 nav a { margin: 0 10px; text-decoration: none; color: #333; }
        4 table { margin: 20px 0; border-collapse: collapse; }
        5 td, th { padding: 8px 12px; }
        6 button { padding: 6px 16px; }
        7
        8 footer {
        9     width: 100%;
       10     background: #f8f8f8;
       11     box-shadow: 0 -2px 8px rgba(0,0,0,0.05);
       12     padding: 10px 0;
       13     position: fixed;
       14     bottom: 0;
       15     left: 0;
       16     z-index: 100;
       17     text-align: center;
       18 }
       19
       20 .footer-links {
       21     display: inline-flex;
       22     gap: 20px;
       23     align-items: center;
       24 }
       25
       26 .footer-links a {
       27     color: #222;
       28     text-decoration: none;
       29     font-weight: bold;
       30     font-size: 1em;
       31     padding: 0 8px;
       32     transition: color 0.2s;
       33 }
       34
       35 .footer-links a:hover {
       36     color: #007bff;
       37 }
       38
       39 .footer-separator {
       40     color: #aaa;
       41     font-size: 1.1em;
       42     user-select: none;
       43 }
       44
       45 .main-content {
       46     display: flex;
       47     flex-direction: column;
       48     align-items: center;
       49     justify-content: center;
       50     min-height: 70vh;
       51 }
       52
       53 .button-center {
       54     display: flex;
       55     justify-content: center;
       56     margin-top: 20px;
       57 }
       58
       59 .button-center button {
       60     background-color: #007bff;
       61     color: #fff;
       62     border: 1px solid #000;
       63     border-radius: 5px;
       64     padding: 10px 20px;
       65     cursor: pointer;
       66 }
       67
       68 /* --- Сторінка профілю: макет у два стовпці --- */
       69 .profile-wrapper {
       70     display: flex;
       71     flex-direction: row;
       72     justify-content: center;
       73     align-items: flex-start;
       74     gap: 40px;
       75     width: 100%;
       76     margin-top: 30px;
       77 }
       78 .profile-photo-block {
       79     display: flex;
       80     flex-direction: column;
       81     align-items: center;
       82     min-width: 220px;
       83 }
       84 .profile-photo {
       85     width: 220px;
       86     height: 220px;
       87     object-fit: cover;
       88     border-radius: 10px;
       89     background: #f3f3f3;
       90     border: 1.5px dashed #bbb;
       91     margin-bottom: 18px;
       92     display: flex;
       93     align-items: center;
       94     justify-content: center;
       95 }
       96 .profile-form {
       97     flex: 1;
       98     background: #fff;
       99     border-radius: 10px;
      100     box-shadow: 0 2px 8px rgba(0,0,0,0.07);
      101     padding: 24px 32px;
      102     min-width: 350px;
      103     max-width: 600px;
      104 }
      105 .profile-form-row {
      106     display: flex;
      107     gap: 18px;
      108     margin-bottom: 12px;
      109 }
      110 .profile-form-row label {
      111     flex: 1;
      112     font-weight: bold;
      113     display: flex;
      114     flex-direction: column;
      115     font-size: 1em;
      116 }
      117 .profile-form input[type="text"],
      118 .profile-form input[type="date"] {
      119     width: 100%;
      120     padding: 8px 10px;
      121     margin-top: 4px;
      122     border: 1px solid #ccc;
      123     border-radius: 5px;
      124     font-size: 1em;
      125     box-sizing: border-box;
      126 }
      127 .profile-form textarea {
      128     width: 100%;
      129     padding: 8px 10px;
      130     margin-top: 4px;
      131     border: 1px solid #ccc;
      132     border-radius: 5px;
      133     font-size: 1em;
      134     box-sizing: border-box;
      135     resize: vertical;
      136     min-height: 80px;
      137 }
      138 .profile-form input[type="file"] {
      139     margin-top: 8px;
      140     margin-bottom: 18px;
      141 }
      142 .profile-form .profile-form-actions {
      143     display: flex;
      144     justify-content: flex-end;
      145     margin-top: 18px;
      146 }
      147 .profile-form button[type="submit"] {
      148     background-color: #007bff;
      149     color: #fff;
      150     border: 1px solid #007bff;
      151     border-radius: 5px;
      152     padding: 10px 32px;
      153     font-size: 1.1em;
      154     font-weight: bold;
      155     cursor: pointer;
      156     transition: background 0.2s;
      157 }
      158 .profile-form button[type="submit"]:hover {
      159     background: #0056b3;
      160 }
      161 .profile-success {
      162     color: #1a7f37;
      163     background: #e6f9ed;
      164     border: 1px solid #b6e2c7;
      165     padding: 8px 16px;
      166     border-radius: 5px;
      167     margin-top: 10px;
      168 }
      169 .profile-error {
      170     color: #b91c1c;
      171     background: #fee2e2;
      172     border: 1px solid #fca5a5;
      173     padding: 8px 16px;
      174     border-radius: 5px;
      175     margin-top: 10px;
      176 }
      177 .profile-upload-btn {
      178     display: inline-block;
      179     background: #007bff;
      180     color: #fff;
      181     padding: 10px 28px;
      182     border-radius: 6px;
      183     font-weight: bold;
      184     font-size: 1.05em;
      185     cursor: pointer;
      186     border: none;
      187     margin-top: 10px;
      188     transition: background 0.2s;
      189     text-align: center;
      190 }
      191 .profile-upload-btn:hover {
      192     background: #0056b3;
      193 }


Б.6 Файл header.php

GitHub репозиторій: https://github.com/NureDrobyshevIvan/smp-pzpi-23-2-drobyshev-ivan/blob/main/Lab4/smp-pzpi-23-2-drobyshev-ivan-lab4/includes/header.php

        1 <?php if (session_status() === PHP_SESSION_NONE) session_start();
        2 ?>
        3 <header >
        4 <link rel="stylesheet" href="style.css">
        5 <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
        6     <nav style="display: flex; justify-content: space-between; align-items: center; margin: 0 auto; height: 30px; padding: 0%;">
        7         <a href="index.php">
        8             <i class="fas fa-home"></i> Home
        9         </a> |
       10         <a href="index.php?page=products">
       11             <i class="fas fa-bars"></i> Products
       12         </a>
       13         <?php if (!empty($_SESSION['user_id'])): ?>
       14             |
       15             <a href="index.php?page=basket">
       16                 <i class="fas fa-shopping-cart"></i> Cart
       17             </a>
       18             |
       19             <a href="index.php?page=profile">
       20                 <i class="fas fa-user"></i> Profile
       21             </a>
       22         <?php endif; ?>
       23         |
       24         <?php if (empty($_SESSION['user_id'])): ?>
       25             <a href="index.php?page=login"><i class="fas fa-sign-in-alt"></i> Login</a>
       26         <?php else: ?>
       27             <a href="index.php?page=logout"><i class="fas fa-sign-out-alt"></i> Logout (<?= htmlspecialchars($_SESSION['username']) ?>)</a>
       28         <?php endif; ?>
       29     </nav>
       30     <hr>
       31 </header>
      

Б.7 Файл footer.php

GitHub репозиторій: https://github.com/NureDrobyshevIvan/smp-pzpi-23-2-drobyshev-ivan/blob/main/Lab4/smp-pzpi-23-2-drobyshev-ivan-lab4/includes/footer.php

        1 <?php
        2 if (session_status() === PHP_SESSION_NONE) session_start();
        3 ?>
        4 <footer>
        5 <link rel="stylesheet" href="style.css">
        6     <div class="footer-links">
        7         <a href="index.php">Home</a>
        8         <span class="footer-separator">|</span>
        9         <a href="index.php?page=products">Products</a>
       10         <?php if (!empty($_SESSION['user_id'])): ?>
       11             <span class="footer-separator">|</span>
       12             <a href="index.php?page=basket">Cart</a>
       13         <?php endif; ?>
       14         <span class="footer-separator">|</span>
       15         <a href="about.php">About Us</a>
       16         <span class="footer-separator">|</span>
       17         <?php if (empty($_SESSION['user_id'])): ?>
       18             <a href="index.php?page=login">Login</a>
       19         <?php else: ?>
       20             <a href="index.php?page=logout">Logout (<?= htmlspecialchars($_SESSION['username']) ?>)</a>
       21         <?php endif; ?>
       22     </div>
       23 </footer>


Б.8 Файл index.php

GitHub репозиторій: https://github.com/NureDrobyshevIvan/smp-pzpi-23-2-drobyshev-ivan/blob/main/Lab4/smp-pzpi-23-2-drobyshev-ivan-lab4/index.php

        1 <?php
        2 session_start();
        3
        4 include __DIR__ . '/includes/header.php';
        5 require_once __DIR__ . '/includes/functions.php';
        6
        7 $page = isset($_GET['page']) ? $_GET['page'] : 'home';
        8
        9 switch ($page) {
       10     case 'home':
       11         require_once __DIR__ . '/home.php';
       12         break;
       13     case 'products':
       14         require_once __DIR__ . '/products.php';
       15         break;
       16     case 'basket':
       17         require_once __DIR__ . '/basket.php';
       18         break;
       19     case 'login':
       20         require_once __DIR__ . '/login.php';
       21         break;
       22     case 'profile':
       23         require_once __DIR__ . '/profile.php';
       24         break;
       25     case 'logout':
       26         logoutUser();
       27         header('Location: index.php?page=login');
       28         exit;
       29     default:
       30         require_once __DIR__ . '/404.php';
       31         break;
       32 }
       33
       34 include __DIR__ . '/includes/footer.php';
       35 ?>

Б.9 Файл home.php

GitHub репозиторій: https://github.com/NureDrobyshevIvan/smp-pzpi-23-2-drobyshev-ivan/blob/main/Lab4/smp-pzpi-23-2-drobyshev-ivan-lab4/home.php

        1 <?php
        2 ?>
        3 <div class="main-content">
        4     <h2>Вітаємо в нашому магазині!</h2>
        5     <a href="index.php?page=products" style="font-size:1.2em; font-weight:bold; color:#007bff; text-decoration:underline;">Перейти до покупок</a>
        6 </div>

Б.10 Файл login.php

GitHub репозиторій: https://github.com/NureDrobyshevIvan/smp-pzpi-23-2-drobyshev-ivan/blob/main/Lab4/smp-pzpi-23-2-drobyshev-ivan-lab4/login.php

        1 <?php
        2 
        3 $error = '';
        4 if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        5     $username = trim($_POST['username'] ?? '');
        6     $password = $_POST['password'] ?? '';
        7     if ($username === '' || $password === '') {
        8         $error = 'Введіть логін і пароль.';
        9     } else {
       10         require __DIR__ . '/data/productsDB.php';
       11         $stmt = $pdo->prepare('SELECT * FROM users WHERE username = ?');
       12         $stmt->execute([$username]);
       13         $user = $stmt->fetch(PDO::FETCH_ASSOC);
       14         if ($user && password_verify($password, $user['password'])) {
       15             $_SESSION['user_id'] = $user['id'];
       16             $_SESSION['username'] = $user['username'];
       17             $_SESSION['login_time'] = date('Y-m-d H:i:s');
       18             header('Location: index.php?page=products');
       19             exit;
       20         } else {
       21             $error = 'Невірний логін або пароль.';
       22         }
       23     }
       24 }
       25 ?>
       26 <div class="main-content">
       27     <h2>Вхід</h2>
       28     <form method="post">
       29         <label>Логін:<br>
       30             <input type="text" name="username" required>
       31         </label><br><br>
       32         <label>Пароль:<br>
       33             <input type="password" name="password" required>
       34         </label><br><br>
       35         <button type="submit">Увійти</button>
       36     </form>
       37     <?php if ($error): ?>
       38         <div style="color:red; margin-top:10px;"> <?= htmlspecialchars($error) ?> </div>
       39     <?php endif; ?>
       40 </div>

Б.11 Файл 404.php

GitHub репозиторій: https://github.com/NureDrobyshevIvan/smp-pzpi-23-2-drobyshev-ivan/blob/main/Lab4/smp-pzpi-23-2-drobyshev-ivan-lab4/404.php

        1 <div class="main-content">
        2     <h2>Для початку увійдіть в систему</h2>
        3     <a href="main.php?page=login" style="font-size:1.2em; font-weight:bold; color:#007bff; text-decoration:underline;">Увійти</a>
        4 </div>
        5 <?php include __DIR__ . '/includes/footer.php'; ?>


Б.12 Файл profile.php

GitHub репозиторій: https://github.com/NureDrobyshevIvan/smp-pzpi-23-2-drobyshev-ivan/blob/main/Lab4/smp-pzpi-23-2-drobyshev-ivan-lab4/profile.php

        1 <?php
        2 requireAuth();
        3 require __DIR__ . '/data/productsDB.php';
        4
        5 $user_id = $_SESSION['user_id'];
        6 $error = '';
        7 $success = '';
        8
        9 $stmt = $pdo->prepare('SELECT * FROM users WHERE id = ?');
       10 $stmt->execute([$user_id]);
       11 $user = $stmt->fetch(PDO::FETCH_ASSOC);
       12
       13 if ($_SERVER['REQUEST_METHOD'] === 'POST') {
       14     $first_name = trim($_POST['first_name'] ?? '');
       15     $last_name = trim($_POST['last_name'] ?? '');
       16     $birth_date = $_POST['birth_date'] ?? '';
       17     $description = trim($_POST['description'] ?? '');
       18     $photo = $user['photo'];
       19
       20     if (isset($_FILES['photo']) && $_FILES['photo']['error'] === UPLOAD_ERR_OK) {
       21         $ext = pathinfo($_FILES['photo']['name'], PATHINFO_EXTENSION);
       22         $allowed = ['jpg', 'jpeg', 'png'];
       23         if (in_array(strtolower($ext), $allowed)) {
       24             $filename = 'profile_' . $user_id . '_' . time() . '.' . $ext;
       25             $uploadDir = __DIR__ . '/uploads/';
       26             if (!is_dir($uploadDir)) mkdir($uploadDir, 0777, true);
       27             if (move_uploaded_file($_FILES['photo']['tmp_name'], $uploadDir . $filename)) {
       28                 $photo = 'uploads/' . $filename;
       29             } else {
       30                 $error = 'Помилка збереження фото.';
       31             }
       32         } else {
       33             $error = 'Дозволені формати: jpg, jpeg, png, gif.';
       34         }
       35     }
       36
       37     if ($first_name === '' || strlen($first_name) < 2) {
       38         $error = 'Ім' . chr(8217) . 'я повинно містити більше 1 символу.';
       39     } elseif ($last_name === '' || strlen($last_name) < 2) {
       40         $error = 'Прізвище повинно містити більше 1 символу.';
       41     } elseif (!$birth_date || (strtotime($birth_date) > strtotime('-16 years'))) {
       42         $error = 'Вам має бути не менше 16 років.';
       43     } elseif (strlen($description) < 50) {
       44         $error = 'Опис повинен містити більше 50 символів.';
       45     }
       46     if (!$error) {
       47         $stmt = $pdo->prepare('UPDATE users SET first_name=?, last_name=?, birth_date=?, description=?, photo=? WHERE id=?');
       48         $stmt->execute([$first_name, $last_name, $birth_date, $description, $photo, $user_id]);
       49         $success = 'Дані профілю оновлено!';
       50         $user['first_name'] = $first_name;
       51         $user['last_name'] = $last_name;
       52         $user['birth_date'] = $birth_date;
       53         $user['description'] = $description;
       54         $user['photo'] = $photo;
       55     }
       56 }
       57 ?>
       58 <div class="main-content">
       59     <h2>Профіль користувача</h2>
       60     <div class="profile-wrapper">
       61         <div class="profile-photo-block">
       62             <div class="profile-photo" id="profilePhotoPreview">
       63                 <?php if ($user['photo']): ?>
       64                     <img src="<?= htmlspecialchars($user['photo']) ?>" alt="Фото" id="profilePhotoImg" style="width:100%;height:100%;object-fit:cover;border-radius:10px;">
       65                 <?php endif; ?>
       66             </div>
       67             <form id="photoUploadForm" enctype="multipart/form-data" method="post" style="margin-top:10px;">
       68                 <input type="file" name="photo" id="photoInput" accept="image/*" style="display:none;">
       69                 <label for="photoInput" class="profile-upload-btn">Завантажити</label>
       70             </form>
       71         </div>
       72         <form method="post" enctype="multipart/form-data" class="profile-form" id="profileForm">
       73             <div class="profile-form-row">
       74                 <label>Ім'я:
       75                     <input type="text" name="first_name" value="<?= htmlspecialchars($user['first_name']) ?>" required>  
       76                 </label>
       77                 <label>Прізвище:
       78                     <input type="text" name="last_name" value="<?= htmlspecialchars($user['last_name']) ?>" required>    
       79                 </label>
       80                 <label>Дата народження:
       81                     <input type="date" name="birth_date" value="<?= htmlspecialchars($user['birth_date']) ?>" required>  
       82                 </label>
       83             </div>
       84             <label>Опис:
       85                 <textarea name="description" rows="4" required><?= htmlspecialchars($user['description']) ?></textarea>  
       86             </label>
       87             <div class="profile-form-actions">
       88                 <button type="submit">Зберегти</button>
       89             </div>
       90         </form>
       91     </div>
       92     <?php if ($error): ?>
       93         <div class="profile-error"> <?= htmlspecialchars($error) ?> </div>
       94     <?php elseif ($success): ?>
       95         <div class="profile-success"> <?= htmlspecialchars($success) ?> </div>
       96     <?php endif; ?>
       97 </div>
       98 <script>
       99
      100 const photoInput = document.getElementById('photoInput');
      101 const photoPreview = document.getElementById('profilePhotoPreview');
      102 photoInput.addEventListener('change', function(e) {
      103     if (this.files && this.files[0]) {
      104         const reader = new FileReader();
      105         reader.onload = function(ev) {
      106             let img = photoPreview.querySelector('img');
      107             if (!img) {
      108                 img = document.createElement('img');
      109                 img.style.width = '100%';
      110                 img.style.height = '100%';
      111                 img.style.objectFit = 'cover';
      112                 img.style.borderRadius = '10px';
      113                 photoPreview.innerHTML = '';
      114                 photoPreview.appendChild(img);
      115             }
      116             img.src = ev.target.result;
      117         };
      118         reader.readAsDataURL(this.files[0]);
      119     }
      120 });
      121
      122 const profileForm = document.getElementById('profileForm');
      123 const photoUploadForm = document.getElementById('photoUploadForm');
      124 profileForm.addEventListener('submit', function(e) {
      125     if (photoInput.files.length > 0) {
      126         photoInput.setAttribute('form', 'profileForm');
      127     }
      128 });
      129 </script>
      
2


